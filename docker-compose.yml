version: '3.8'
networks:
  my_network:

services:
  postgres:
    image: postgres:13.1
    container_name: postgres
    build:
      dockerfile: Dockerfile.postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - my_network
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
#    command: ["sh", "-c", "echo 'POSTGRES_USER=$POSTGRES_USER' && echo 'POSTGRES_PASSWORD=$POSTGRES_PASSWORD' && echo 'POSTGRES_DB=$POSTGRES_DB'"]


  vault:
    image: hashicorp/vault:latest
    container_name: vault_c
    networks:
      - my_network
    ports:
      - "8200:8200"  # Expose Vault's default port
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_API_ADDR: "http://0.0.0.0:8200"
      VAULT_LOG_LEVEL: "info"  # Set the log level to info for better logging
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_STORAGE: "consul"  # Use Consul as the storage backend
      VAULT_CONSUL_ADDRESS: "consul:8500"  # Address of Consul
      VAULT_CONSUL_TOKEN: "myroot"  # Consul token for authentication
    volumes:
      - ./vault-config:/vault/config

  app:
    networks:
      - my_network
    container_name: lab3
    build:
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data


volumes:
  postgres_db_data: